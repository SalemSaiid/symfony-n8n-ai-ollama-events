version: '3.8'

services:
  traefik:
    image: traefik:v2.10
    container_name: traefik
    restart: always
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"  # Dashboard Traefik
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./traefik.yml:/etc/traefik/traefik.yml:ro
      - ./letsencrypt:/letsencrypt
    networks:
      - traefik_net
    command:
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web"
      - "--certificatesresolvers.myresolver.acme.email=ton@email.com"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
      - "--ping=true"  # Activation du healthcheck
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.rule=Host(`traefik.127.0.0.1.nip.io`)"
      - "traefik.http.routers.traefik.entrypoints=web"
      - "traefik.http.services.traefik.loadbalancer.server.port=8080"

  php:
    image: php:8.2-fpm
    container_name: symfony_php
    working_dir: /var/www/symfony
    volumes:
      - .:/var/www/symfony
    environment:
      - COMPOSER_ALLOW_SUPERUSER=1
      - MESSENGER_TRANSPORT_DSN=amqp://guest:guest@rabbitmq:5672/%2f/messages
      - DATABASE_URL=postgresql://symfony_user:symfony_password@database:5432/symfony_db
    entrypoint: >
      sh -c "apt-get update &&
             apt-get install -y librabbitmq-dev libssl-dev libpq-dev git unzip &&
             pecl install amqp &&
             docker-php-ext-enable amqp &&
             docker-php-ext-install pdo pdo_pgsql &&
             curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer &&
             php-fpm"
    depends_on:
      - rabbitmq
      - database
      - redis
    networks:
      - traefik_net

  nginx:
    image: nginx:latest
    container_name: symfony_nginx
    volumes:
      - .:/var/www/symfony
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - php
    networks:
      - traefik_net
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.symfony.rule=Host(`symfony.127.0.0.1.nip.io`)"
      - "traefik.http.routers.symfony.entrypoints=web"
      - "traefik.http.services.symfony.loadbalancer.server.port=80"

  database:
    image: postgres:15
    container_name: postgres
    restart: always
    environment:
      POSTGRES_DB: symfony_db
      POSTGRES_USER: symfony_user
      POSTGRES_PASSWORD: symfony_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - traefik_net

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
    depends_on:
      - database
    networks:
      - traefik_net
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.pgadmin.rule=Host(`pgadmin.127.0.0.1.nip.io`)"
      - "traefik.http.routers.pgadmin.entrypoints=web"
      - "traefik.http.services.pgadmin.loadbalancer.server.port=80"

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    networks:
      - traefik_net
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.rabbitmq.rule=Host(`rabbitmq.127.0.0.1.nip.io`)"
      - "traefik.http.routers.rabbitmq.entrypoints=web"
      - "traefik.http.services.rabbitmq.loadbalancer.server.port=15672"

  redis:
    image: redis:latest
    container_name: redis
    networks:
      - traefik_net

  n8n:
    image: n8nio/n8n
    container_name: n8n
    environment:
      - N8N_SESSION_COOKIE_SECURE=false
      - N8N_BASIC_AUTH_ACTIVE=true
      - N8N_BASIC_AUTH_USER=admin
      - N8N_BASIC_AUTH_PASSWORD=admin
      - GENERIC_TIMEZONE=Europe/Paris
      - N8N_PROTOCOL=https
      - N8N_HOST=n8n.127.0.0.1.nip.io
      - WEBHOOK_URL=https://n8n.127.0.0.1.nip.io/
      - N8N_SECURE_COOKIE=false
      - OLLAMA_API_BASE=http://ollama:11434
    volumes:
      - n8n_data:/home/node/.n8n
    networks:
      - traefik_net
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.n8n.rule=Host(`n8n.127.0.0.1.nip.io`)"
      - "traefik.http.routers.n8n.entrypoints=websecure"
      - "traefik.http.routers.n8n.tls.certresolver=myresolver"
      - "traefik.http.services.n8n.loadbalancer.server.port=5678"

  openui:
    image: ghcr.io/open-webui/open-webui:main
    container_name: openui
    ports:
      - "3000:8080"  # expose le port 3000 de l'hôte sur le port 8080 du conteneur
    environment:
      - OLLAMA_BASE_URL=http://ollama:11434  # URL du service Ollama
    volumes:
      - open-webui:/app/backend/data
    networks:
      - traefik_net
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.openui.rule=Host(`openui.127.0.0.1.nip.io`)"
      - "traefik.http.routers.openui.entrypoints=web"
      - "traefik.http.services.openui.loadbalancer.server.port=8080"

  ollama:
    image: ollama/ollama:latest
    container_name: ollama
    ports:
      - "11434:11434"  # Expose le port 11434 pour que OpenUI puisse y accéder
    environment:
      - OLLAMA_API_KEY=your-api-key-here  # Remplacer par ta clé API Ollama si nécessaire
    networks:
      - traefik_net
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.ollama.rule=Host(`ollama.127.0.0.1.nip.io`)"
      - "traefik.http.routers.ollama.entrypoints=web"
      - "traefik.http.services.ollama.loadbalancer.server.port=11434"

networks:
  traefik_net:
    external: true

volumes:
  postgres_data:
  n8n_data:
  letsencrypt:
  open-webui:
